{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bryansantamaria/Documents/react-covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bryansantamaria/Documents/react-covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bryansantamaria/Documents/react-covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../api\";import{Line,Bar}from\"react-chartjs-2/\";import styles from\"./Chart.module.css\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);if(confirmed){var stillInfected=[confirmed.value-recovered.value-deaths.value];}var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:\"Infected\",borderColor:\"#3333ff\",fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:\"Deaths\",borderColor:\"red\",backgroundColor:\"rgba(255, 0, 0, 0.5)\",fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:[\"Infected\",\"Recovered\",\"Deaths\",\"Still infected\"],datasets:[{label:\"People\",backgroundColor:[\"rgba(0, 0, 255, 0.5)\",\"rgba(0, 255, 0, 0.5)\",\"rgba(255, 0, 0, 0.5)\",\"rgba(255, 166, 0, 0.753)\"],data:[confirmed.value,recovered.value,deaths.value,stillInfected[0]]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/Users/bryansantamaria/Documents/react-covid19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","stillInfected","value","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,eACnCX,QAAQ,CAAC,EAAD,CAD2B,wCAC9DY,SAD8D,eACnDC,YADmD,eAGrEZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIX,CAAAA,cAAc,EADlB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACT,CALQ,CAKN,EALM,CAAT,CAOA,GAAIN,SAAJ,CAAe,CACb,GAAIO,CAAAA,aAAa,CAAG,CAACP,SAAS,CAACQ,KAAV,CAAkBP,SAAS,CAACO,KAA5B,CAAoCN,MAAM,CAACM,KAA5C,CAApB,CACD,CAED,GAAMC,CAAAA,SAAS,CAAGL,SAAS,CAACM,MAAV,cAChB,oBAAC,IAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEP,SAAS,CAACQ,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEf,IAAI,CAAEK,SAAS,CAACQ,GAAV,CAAc,mBAAGZ,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADR,CAEEe,KAAK,CAAE,UAFT,CAGEC,WAAW,CAAE,SAHf,CAIEC,IAAI,CAAE,IAJR,CADQ,CAOR,CACElB,IAAI,CAAEK,SAAS,CAACQ,GAAV,CAAc,mBAAGV,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADR,CAEEa,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAE,KAHf,CAIEE,eAAe,CAAE,sBAJnB,CAKED,IAAI,CAAE,IALR,CAPQ,CAFN,CADR,EADgB,CAqBd,IArBJ,CAuBA,GAAME,CAAAA,QAAQ,CAAGnB,SAAS,cACxB,oBAAC,GAAD,EACE,IAAI,CAAE,CACJW,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CAAoC,gBAApC,CADJ,CAEJG,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,QADT,CAEEG,eAAe,CAAE,CACf,sBADe,CAEf,sBAFe,CAGf,sBAHe,CAIf,0BAJe,CAFnB,CAQEnB,IAAI,CAAE,CACJC,SAAS,CAACQ,KADN,CAEJP,SAAS,CAACO,KAFN,CAGJN,MAAM,CAACM,KAHH,CAIJD,aAAa,CAAC,CAAD,CAJT,CARR,CADQ,CAFN,CADR,CAqBE,OAAO,CAAE,CACPa,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBpB,OAAtB,CAArB,CAFA,CArBX,EADwB,CA2BtB,IA3BJ,CA6BA,mBACE,2BAAK,SAAS,CAAEN,MAAM,CAAC2B,SAAvB,EAAmCrB,OAAO,CAAGgB,QAAH,CAAcV,SAAxD,CADF,CAGD,CArED,CAuEA,cAAeX,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2/\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  if (confirmed) {\n    var stillInfected = [confirmed.value - recovered.value - deaths.value];\n  }\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Still infected\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n              \"rgba(255, 166, 0, 0.753)\",\n            ],\n            data: [\n              confirmed.value,\n              recovered.value,\n              deaths.value,\n              stillInfected[0],\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}